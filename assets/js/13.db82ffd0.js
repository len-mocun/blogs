(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{446:function(a,s,t){"use strict";t.r(s);var n=t(2),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"java的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java的变量"}},[a._v("#")]),a._v(" java的变量")]),a._v(" "),s("ul",[s("li",[a._v("java中也可以自定义变量，每一个java变量属于一种类型，也就是说必须指明java变量的类型")]),a._v(" "),s("li",[a._v("声明示例：")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("double salary；\nint count;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("ul",[s("li",[a._v("变量的声明属于一条完整的语句，用分号结束。")]),a._v(" "),s("li",[a._v("变量名的命名规则：")])]),a._v(" "),s("blockquote",[s("p",[a._v("必须以字母或者下划线开头，由字母或者数字构成的序列。")])]),a._v(" "),s("blockquote",[s("p",[a._v("java的变量不能使用java的保留字进行命名。")])]),a._v(" "),s("blockquote",[s("p",[a._v("java的变量名是区分大小写的，如：Count 和count两个变量是不相同的。")])]),a._v(" "),s("blockquote",[s("p",[a._v("长度没有限制，注意java的变量命名规范应当是变量具有可读性，这是一个合格的java开发的基本功。")])]),a._v(" "),s("h2",{attrs:{id:"变量初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量初始化"}},[a._v("#")]),a._v(" 变量初始化")]),a._v(" "),s("ul",[s("li",[a._v("java的变量在使用前必须初始化。")]),a._v(" "),s("li",[a._v("可以在定义时初始化，也就是在定义的时候使用赋值语句进行初始化，这里先说一些，java的赋值符号和大多语言一样是“=”")]),a._v(" "),s("li",[a._v("例如：int count=12；")]),a._v(" "),s("li",[a._v("或者在定义完毕之后在使用前进行初始化也是可以的。")]),a._v(" "),s("li",[a._v("例如：")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int count;\ncount=12;//在使用之前必须初始化，否则就会报错\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("ul",[s("li",[a._v("java 的变量声明可以放在代码的任何地方，放在不同的地方的作用域是不一样的，我们后面会说到。")])]),a._v(" "),s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),s("ul",[s("li",[a._v("java中使用final关键字指明常量")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("访问控制符(或者默认不写) final 常量名 = 值；\n\n访问控制符(或者默认不写) final 常量名\n常量名=值；\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("ul",[s("li",[s("p",[a._v("常量只能被赋值一次，一旦赋值之后就不可以再更改了，")])]),a._v(" "),s("li",[s("p",[a._v("类常量：在final前面加上一个static关键字，并将定义语句写在类中main方法之外。便可以将常量的作用域提升至整个类。")])]),a._v(" "),s("li",[s("p",[a._v("如果访问控制符为public，那么其他类也可以使用这个常量。")])])]),a._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[a._v("#")]),a._v(" 运算符")]),a._v(" "),s("ul",[s("li",[s("p",[s("strong",[a._v("算数运算符")])]),a._v(" "),s("ul",[s("li",[a._v('" +" 、"-"、 "*"、 "/"表示加减乘除运算符')]),a._v(" "),s("li",[a._v("还有一个特殊的“%”叫做取余运算符")]),a._v(" "),s("li",[a._v("当“/”运算符的两个操作数都是整数的时候，表示整数除法，否则表示浮点除法")]),a._v(" "),s("li",[a._v("整数除以0会产生一个异常，浮点数除以0会得到无穷大后者NaN结果")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("自增运算符和自减运算符")])]),a._v(" "),s("ul",[s("li",[a._v("自增++，自减--")]),a._v(" "),s("li",[a._v("如果是n++，表示先使用n的原值，再进行加一操作，++n表示先加一再取值")]),a._v(" "),s("li",[a._v("自减运算符合自增运算符一样")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("关系运算符与boolean运算符")])]),a._v(" "),s("ul",[s("li",[a._v("关系运算符：==（相等）、<（小于） 、>（大于） 、>=、<=、!=（不等于）、&&（与）、||(或)、!(非)")]),a._v(" "),s("li",[a._v("注意：在使用&& 、||关系运算符的时候，比如：表达式1 && 表达式2;例如：(2>3) && (3<2);这时候，运算第一个表达式的结果为false，则不会再去计算第二个表达式，直接返回false了，因为 && （与）运算必须两个表达式或者变量同时为true的时候，结果才会为true。")]),a._v(" "),s("li",[a._v("三元运算符：condition ? expression1:expression2；当condition为真时计算第一个表达式作为返回结果，否则计算第二个表达式作为返回结果。")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("位运算符")]),a._v("：")]),a._v(" "),s("ul",[s("li",[a._v("按位或：&")]),a._v(" "),s("li",[a._v("按位与：|")]),a._v(" "),s("li",[a._v("异或：^")]),a._v(" "),s("li",[a._v("非：~")]),a._v(" "),s("li",[a._v(">> 二进制位右移")]),a._v(" "),s("li",[a._v("<< 二进制位左移")]),a._v(" "),s("li",[a._v(">>>运算符将用0填充高位，>> 运算符用符号位填充高位。没有<<<运算符。")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("数学函数和常量")])]),a._v(" "),s("ul",[s("li",[a._v("在java中有一个Math类，他被final修饰不会被任何类继承（后面会讲到）")]),a._v(" "),s("li",[a._v("在Math类中有近似的数学常量")]),a._v(" "),s("li",[a._v("Math类中的成员都是static修饰的静态的（所有类可以直接使用Math.成员来进行使用）")])])])]),a._v(" "),s("div",{staticClass:"language-.java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Math.PI 圆周率\nMath.E 数学中的e\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("ul",[s("li",[a._v("在Math类中还有一些常用的数学函数(可以在IDEA中进入Math源代码中进行查看)")])]),a._v(" "),s("div",{staticClass:"language-.java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Math.sin\nMath.cos\nMath.tan\nMath.atan\nMath.atan2\nMath.exp：指数函数\nMath.log 相当于数学中的ln\nMath.log10 10为底的对数函数\n…………………………\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h2",{attrs:{id:"数值类型之间的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值类型之间的转换"}},[a._v("#")]),a._v(" 数值类型之间的转换")]),a._v(" "),s("ul",[s("li",[a._v("在基本数据类型之间的转化中，部分的转换是由精度损失的，比如一个浮点数转换成为一个整数则会损失精度。")]),a._v(" "),s("li",[s("strong",[a._v("自动转换")]),a._v("：在java中会有一个类型自动转换存在，例如当另个操作数运算的时候，一个整型一个浮点型，则编译器会自动将整型转换成为浮点型进行计算，结果也是浮点型")]),a._v(" "),s("li",[a._v("java中的自动转换顺序是：范围小的会自动向范围大的转，否则就需要强制转换")])]),a._v(" "),s("div",{staticClass:"language-.java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("        int x=1;\n        double v = x + 1.2;\n        \n        \n        int x=1;\n        int v = x + 1.2;\n        就会报错\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("ul",[s("li",[s("strong",[a._v("强制转换")]),a._v(" "),s("ul",[s("li",[a._v("当范围大的数据向范围小的数据转换时就需要用到强制类型转换，否则就会报错，也就是必须显式的强制转换")]),a._v(" "),s("li",[a._v("强制转换的格式是【 转换后的数据类型 变量名 = (强制转换的类型)(需要被转换的表达式/数据变量)")])])])]),a._v(" "),s("div",{staticClass:"language-.java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("        int x=1;\n        int v = (int) (x + 1.2);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"括号与运算符级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#括号与运算符级别"}},[a._v("#")]),a._v(" 括号与运算符级别")]),a._v(" "),s("h2",{attrs:{id:"枚举类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[a._v("#")]),a._v(" 枚举类型")]),a._v(" "),s("ul",[s("li",[a._v("变量的取值只在几个有限的集合中，例如：销售的服装只有大中小超大这四个尺寸")]),a._v(" "),s("li",[a._v("所以java针对这种数据就使用枚举来定义")]),a._v(" "),s("li",[a._v("枚举的定义方式，可以在成员的位置进行枚举的定义")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SMALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MEDIUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("LARGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),a._v(" size"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MEDIUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[a._v("也可以自己定义一个枚举类")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SMALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("LAGER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MEDIUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SMALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);